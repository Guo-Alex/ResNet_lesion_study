name: "CNN"
####################### input #############################
layer {
  name: "juniward04"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  data_param {
    source: "/home/lgq/Workspace/Contribution_of_CIHW2018_paper/data_preparation/lmdb/train"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "juniward04"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  data_param {
    source: "/home/lgq/Workspace/Contribution_of_CIHW2018_paper/data_preparation/lmdb/test"
    batch_size: 50
    backend: LMDB
  }
}

####################### pre-process #############################
layer {
  bottom:"data" top:"conv1"
  name:"conv1" type:"Convolution"
  param {lr_mult:0 decay_mult:0}
  convolution_param {num_output:16 pad:1 kernel_size:4 stride:1 weight_filler {type:"dct4"} bias_term:false }
}
layer {
  bottom:"conv1" top:"conv1"
  name:"quanttruncabs" type:"QuantTruncAbs"
  quant_trunc_abs_param {process:TRUNCABS threshold:8}
}

############################ 512 #############################
layer {
  bottom:"conv1" top:"conv1_proj"
  name:"conv1_proj" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:24 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2"
  type: "BatchNorm"
  bottom: "conv1_proj"
  top: "conv1_proj"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2"
  type: "Scale"
  bottom: "conv1_proj"
  top: "conv1_proj"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv1" top:"conv512_1"
  name:"conv512_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:12 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_1"
  type: "BatchNorm"
  bottom: "conv512_1"
  top: "conv512_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_1"
  type: "Scale"
  bottom: "conv512_1"
  top: "conv512_1"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv512_1" top:"conv512_1"
  name:"relu512_1" type:"ReLURecover"
}

########################## 512 to 256 ##########################
layer {
  bottom:"conv512_1" top:"conv512_to_256"
  name:"conv512_to_256" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:24 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_2"
  type: "BatchNorm"
  bottom: "conv512_to_256"
  top: "conv512_to_256"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_2"
  type: "Scale"
  bottom: "conv512_to_256"
  top: "conv512_to_256"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "conv1_proj" bottom: "conv512_to_256" top: "res512_to_256"
  name: "res512_to_256" type: "Eltwise"
}
layer {
  bottom:"res512_to_256" top:"res512_to_256"
  name:"relu512_to_256" type:"ReLU"
}

############################ 256 ##############################
layer {
  bottom:"res512_to_256" top:"conv256_1"
  name:"conv256_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:24 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_3"
  type: "BatchNorm"
  bottom: "conv256_1"
  top: "conv256_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_3"
  type: "Scale"
  bottom: "conv256_1"
  top: "conv256_1"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv256_1" top:"conv256_1"
  name:"relu256_1" type:"ReLURecover"
}

layer {
  bottom:"conv256_1" top:"conv256_2"
  name:"conv256_2" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:24 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_4"
  type: "BatchNorm"
  bottom: "conv256_2"
  top: "conv256_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_4"
  type: "Scale"
  bottom: "conv256_2"
  top: "conv256_2"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res512_to_256" bottom: "conv256_2" top: "res256_2"
  name: "res256_2" type: "Eltwise"
}
layer {
  bottom:"res256_2" top:"res256_2"
  name:"relu256_2" type:"ReLU"
}

layer {
  bottom:"res256_2" top:"res256_2_proj"
  name:"res256_2_proj" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:48 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_5"
  type: "BatchNorm"
  bottom: "res256_2_proj"
  top: "res256_2_proj"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_5"
  type: "Scale"
  bottom: "res256_2_proj"
  top: "res256_2_proj"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"res256_2" top:"conv256_3"
  name:"conv256_3" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:24 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_6"
  type: "BatchNorm"
  bottom: "conv256_3"
  top: "conv256_3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_6"
  type: "Scale"
  bottom: "conv256_3"
  top: "conv256_3"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv256_3" top:"conv256_3"
  name:"relu256_3" type:"ReLURecover"
}

########################## 256 to 128 ###########################
layer {
  bottom:"conv256_3" top:"conv256_to_128"
  name:"conv256_to_128" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:48 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_7"
  type: "BatchNorm"
  bottom: "conv256_to_128"
  top: "conv256_to_128"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_7"
  type: "Scale"
  bottom: "conv256_to_128"
  top: "conv256_to_128"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom: "res256_2_proj" bottom: "conv256_to_128" top: "res256_to_128"
  name: "res256_to_128" type: "Eltwise"
}
layer {
  bottom:"res256_to_128" top:"res256_to_128"
  name:"relu256_to_128" type:"ReLU"
}

########################### 128 ################################
layer {
  bottom:"res256_to_128" top:"conv128_1"
  name:"conv128_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:48 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_8"
  type: "BatchNorm"
  bottom: "conv128_1"
  top: "conv128_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_8"
  type: "Scale"
  bottom: "conv128_1"
  top: "conv128_1"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv128_1" top:"conv128_1"
  name:"relu128_1" type:"ReLURecover"
}

layer {
  bottom:"conv128_1" top:"conv128_2"
  name:"conv128_2" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:48 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_9"
  type: "BatchNorm"
  bottom: "conv128_2"
  top: "conv128_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_9"
  type: "Scale"
  bottom: "conv128_2"
  top: "conv128_2"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res256_to_128" bottom: "conv128_2" top: "res128_2"
  name: "res128_2" type: "Eltwise"
}
layer {
  bottom:"res128_2" top:"res128_2"
  name:"relu128_2" type:"ReLU"
}

layer {
  bottom:"res128_2" top:"res128_2_proj"
  name:"res128_2_proj" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:96 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_10"
  type: "BatchNorm"
  bottom: "res128_2_proj"
  top: "res128_2_proj"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_10"
  type: "Scale"
  bottom: "res128_2_proj"
  top: "res128_2_proj"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"res128_2" top:"conv128_3"
  name:"conv128_3" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:48 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_11"
  type: "BatchNorm"
  bottom: "conv128_3"
  top: "conv128_3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_11"
  type: "Scale"
  bottom: "conv128_3"
  top: "conv128_3"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv128_3" top:"conv128_3"
  name:"relu128_3" type:"ReLURecover"
}

########################## 128 to 64 ############################
layer {
  bottom:"conv128_3" top:"conv128_to_64"
  name:"conv128_to_64" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:96 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_12"
  type: "BatchNorm"
  bottom: "conv128_to_64"
  top: "conv128_to_64"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_12"
  type: "Scale"
  bottom: "conv128_to_64"
  top: "conv128_to_64"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res128_2_proj" bottom: "conv128_to_64" top: "res128_to_64"
  name: "res128_to_64" type: "Eltwise"
}
layer {
  bottom:"res128_to_64" top:"res128_to_64"
  name:"relu128_to_64" type:"ReLU"
}

############################# 64 ###############################
layer {
  bottom:"res128_to_64" top:"conv64_1"
  name:"conv64_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:96 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_13"
  type: "BatchNorm"
  bottom: "conv64_1"
  top: "conv64_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_13"
  type: "Scale"
  bottom: "conv64_1"
  top: "conv64_1"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv64_1" top:"conv64_1"
  name:"relu64_1" type:"ReLURecover"
}

layer {
  bottom:"conv64_1" top:"conv64_2"
  name:"conv64_2" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:96 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_14"
  type: "BatchNorm"
  bottom: "conv64_2"
  top: "conv64_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_14"
  type: "Scale"
  bottom: "conv64_2"
  top: "conv64_2"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res128_to_64" bottom: "conv64_2" top: "res64_2"
  name: "res64_2" type: "Eltwise"
}
layer {
  bottom:"res64_2" top:"res64_2"
  name:"relu64_2" type:"ReLU"
}

layer {
  bottom:"res64_2" top:"res64_2_proj"
  name:"res64_2_proj" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:192 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_15"
  type: "BatchNorm"
  bottom: "res64_2_proj"
  top: "res64_2_proj"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_15"
  type: "Scale"
  bottom: "res64_2_proj"
  top: "res64_2_proj"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"res64_2" top:"conv64_3"
  name:"conv64_3" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:96 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_16"
  type: "BatchNorm"
  bottom: "conv64_3"
  top: "conv64_3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_16"
  type: "Scale"
  bottom: "conv64_3"
  top: "conv64_3"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv64_3" top:"conv64_3"
  name:"relu64_3" type:"ReLURecover"
}

########################### 64 to 32 #############################
layer {
  bottom:"conv64_3" top:"conv64_to_32"
  name:"conv64_to_32" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:192 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_17"
  type: "BatchNorm"
  bottom: "conv64_to_32"
  top: "conv64_to_32"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_17"
  type: "Scale"
  bottom: "conv64_to_32"
  top: "conv64_to_32"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res64_2_proj" bottom: "conv64_to_32" top: "res64_to_32"
  name: "res64_to_32" type: "Eltwise"
}
layer {
  bottom:"res64_to_32" top:"res64_to_32"
  name:"relu64_to_32" type:"ReLU"
}

############################# 32 ###############################
layer {
  bottom:"res64_to_32" top:"conv32_1"
  name:"conv32_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:192 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_18"
  type: "BatchNorm"
  bottom: "conv32_1"
  top: "conv32_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_18"
  type: "Scale"
  bottom: "conv32_1"
  top: "conv32_1"
  scale_param {
    bias_term: true
  }
}

layer {
  bottom:"conv32_1" top:"conv32_1"
  name:"relu32_1" type:"ReLURecover"
}

layer {
  bottom:"conv32_1" top:"conv32_2"
  name:"conv32_2" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:192 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_19"
  type: "BatchNorm"
  bottom: "conv32_2"
  top: "conv32_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_19"
  type: "Scale"
  bottom: "conv32_2"
  top: "conv32_2"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res64_to_32" bottom: "conv32_2" top: "res32_2"
  name: "res32_2" type: "Eltwise"
}
layer {
  bottom:"res32_2" top:"res32_2"
  name:"relu32_2" type:"ReLU"
}

layer {
  bottom:"res32_2" top:"res32_2_proj"
  name:"res32_2_proj" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:384 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_20"
  type: "BatchNorm"
  bottom: "res32_2_proj"
  top: "res32_2_proj"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_20"
  type: "Scale"
  bottom: "res32_2_proj"
  top: "res32_2_proj"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"res32_2" top:"conv32_3"
  name:"conv32_3" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:192 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_21"
  type: "BatchNorm"
  bottom: "conv32_3"
  top: "conv32_3"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_21"
  type: "Scale"
  bottom: "conv32_3"
  top: "conv32_3"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv32_3" top:"conv32_3"
  name:"relu32_3" type:"ReLURecover"
}

########################### 32 to 16 #############################
layer {
  bottom:"conv32_3" top:"conv32_to_16"
  name:"conv32_to_16" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:384 pad:1 kernel_size:3 stride:2 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_22"
  type: "BatchNorm"
  bottom: "conv32_to_16"
  top: "conv32_to_16"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_22"
  type: "Scale"
  bottom: "conv32_to_16"
  top: "conv32_to_16"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res32_2_proj" bottom: "conv32_to_16" top: "res32_to_16"
  name: "res32_to_16" type: "Eltwise"
}
layer {
  bottom:"res32_to_16" top:"res32_to_16"
  name:"relu32_to_16" type:"ReLU"
}

############################ 16 #################################
layer {
  bottom:"res32_to_16" top:"conv16_1"
  name:"conv16_1" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:384 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_23"
  type: "BatchNorm"
  bottom: "conv16_1"
  top: "conv16_1"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_23"
  type: "Scale"
  bottom: "conv16_1"
  top: "conv16_1"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom:"conv16_1" top:"conv16_1"
  name:"relu16_1" type:"ReLURecover"
}

layer {
  bottom:"conv16_1" top:"conv16_2"
  name:"conv16_2" type:"Convolution"
  param {lr_mult:1 decay_mult:0}
  convolution_param {num_output:384 pad:1 kernel_size:3 stride:1 weight_filler {type:"gaussian" std:0.01} bias_term:false}
}

layer {
  name: "bn2_24"
  type: "BatchNorm"
  bottom: "conv16_2"
  top: "conv16_2"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.05
  }
}
layer {
  name: "scale2_24"
  type: "Scale"
  bottom: "conv16_2"
  top: "conv16_2"
  scale_param {
    bias_term: true
  }
}


layer {
  bottom: "res32_to_16" bottom: "conv16_2" top: "res16_2"
  name: "res16_2" type: "Eltwise"
}
layer {
  bottom:"res16_2" top:"res16_2"
  name:"relu16_2" type:"ReLU"
}

############################ POOL #################################
layer {
  bottom:"res16_2" top:"global_pool"
  name:"global_pool" type:"Pooling"
  pooling_param {pool:AVE kernel_size:8 stride:1}
}

############################ FC #################################
layer {
  bottom:"global_pool" top:"fc"
  name:"fc" type:"InnerProduct"
  param {lr_mult:1} param {lr_mult:2}
  inner_product_param {num_output:2 weight_filler {type:"xavier"} bias_filler {type:"constant"}}
}

layer {
  bottom:"fc" bottom:"label" top:"accuracy"
  name:"accuracy" type:"Accuracy"
  include {phase:TEST}
}
layer {
  bottom:"fc" bottom:"label" top:"loss"
  name:"loss" type:"SoftmaxWithLoss"
}
